AjouMSG는 토픽 구독, 토픽 발송, 큐 구독, 큐 발송이 하나의 객체에서 전부 가능합니다.
AJouMSG가 실행하기 위해서는 2가지 정보가 필요합니다.
1. connectinfo : 세션을 만들기 위한 정보이며, 클라우드 protocol, vpn, clientname, clientpw 등이 필요합니다.
2. messageinfo : 메시지를 받고 보내기 위한 정보입니다. topicName, QueueName, message 내용, type(토픽 발송, 토픽 구독, 큐 발송, 큐 구독)이 필요합니다.
3. var Ajou = New AjouMSGReceiver(solace, connectinfo); 를 통해 객체를 생성하며, 여기에선 세션 정보만 담겨져있습니다.

Ajou.run(messageinfo)를 통해 세션을 연결하는데, messageinfo에 따라 
토픽 발송, 토픽 구독, 큐 발송, 큐 구독을 진행합니다.

즉, 같은 세션에 계속 message를 보내는 경우 Ajou.run(otherinfo)로 messageinfo를 바꿔가며 message를 전송할 수 있습니다.

다른 세션에 message를 보내야하는 경우 새롭게 객체를 생성해야합니다.

var Seoul = New AjouMSGReceiver(solace, otherconnectinfo) 처럼 사용하여 다른 세션을 열 수 있으며
이후, Seoul.run(~)으로 메시지를 전송하면 됩니다.

단, 이용의 편의를 위해 맨 처음 type은 console argv 즉 인자로 받아서 사용하도록 만들었습니다.
따라서 사용방법은 다음과 같습니다. node AjouMSG.js {{ 숫자 0~3 까지 }} 

payment는 DropoffComplete 메시지를 받아 CompanyQ와 IndividualQ에 전송하는 코드입니다.
자체적으로 Json DB를 가지고 있으며, Passenger ID를 구분하여 다른 Q에 넣게 됩니다. 

1. Payment.js 3 
을 입력하여 QueueSub를 작동한다(dropoff <- 큐를 구독중)
2. dropoff는 DropoffComplete/> 를 구독하고 있기 때문에, 메시지가 오면 작동한다.
3. 작동한 Payment는 데이터를 Json에서 가져와 Pay 세부자료를 만들어 CompanyQ와 IndividualQ에 넣는다.
4. PaymentQueue.js 3
을 입력하여 IndividualQ에 있는 메시지를 읽는다.
5. 메시지를 읽은 Q는 PaymentRequest 메시지를 만들어 전송한다. 
